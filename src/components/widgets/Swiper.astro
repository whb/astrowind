---
import { Icon } from 'astro-icon/components';

const { slides } = Astro.props;

const taiwindTextColor = (color) => {
  return 'text-[' + color + ']';
};
---

<div id="main_hero" class="w-full h-screen astro-S3CKSQXZ">
  <div class="swiper astro-S3CKSQXZ">
    <div class="swiper-wrapper astro-S3CKSQXZ">
      {
        slides.map((item) => (
          <div class="bg_custom_slide swiper-slide flex flex-col gap-4 astro-S3CKSQXZ">
            <span
              class:list={['text-[5vw] lg:text-2xl uppercase astro-S3CKSQXZ', taiwindTextColor(item.text_color)]}
              data-swiper-parallax-y="-600"
              data-swiper-parallax-duration="500"
            >
              {item.kicker}
            </span>

            <h2
              class:list={[
                'mb-8 portrait:text-[10vw] md:portrait:text-[12vw] landscape:text-[12vh]  leading-[120%] astro-S3CKSQXZ',
                taiwindTextColor(item.text_color),
              ]}
              data-swiper-parallax="-700"
              data-swiper-parallax-duration="600"
              style="transform: translate3d(0px, 0px, 0px);"
            >
              {item.title && (
                <span class="tracking-tighter astro-S3CKSQXZ" set:html={item.title} />
              )}
              <span
                class:list={[
                  'portrait:text-[8vw] italic astro-S3CKSQXZ',
                  taiwindTextColor(item.text_color),
                ]}
              >
                {item.highlight}
              </span>
            </h2>
          </div>
        ))
      }
    </div>

    <div class="w-full absolute bottom-0 z-10 flex items-center justify-between p-8 pb-16">
      <div class="swiper-pagination astro-S3CKSQXZ"></div>

      <div class="flex items-center gap-2">
        <Icon name="tabler:circle-arrow-left-filled" class="swiper-button-prev text-loco-red transition-all" />
        <Icon
          name="tabler:circle-arrow-right-filled"
          class="swiper-button-next text-4xl text-loco-red transition-all"
        />
      </div>
    </div>
  </div>
</div>

<style>
  .swiper {
      --swiper-navigation-size: 64px;
      --swiper-navigation-sides-offset: 20px;
      --swiper-navigation-top-offset: 10%;
      --swiper-pagination-bottom: 76px;
  }

  a:where(.astro-NOOLMW6A) {
    background-color: var(--bg_color);
    color: var(--text_color);
  }

  .swiper:where(.astro-S3CKSQXZ),
  main:where(.astro-S3CKSQXZ) {
    position: relative;
  }

  .swiper:where(.astro-S3CKSQXZ) {
    height: 100%;
    width: 100%;
  }

  .swiper-slide:where(.astro-S3CKSQXZ) {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 0 2rem 0 6rem;

    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
  }

  .progress-bg:where(.astro-S3CKSQXZ) {
    background-color: #fff;
  }

  .pl-open-menu:where(.astro-S3CKSQXZ) {
    padding-left: 400px;
  }

  @media screen and (max-width: 1023px) {
    .swiper-slide:where(.astro-S3CKSQXZ) {
      justify-content: flex-start;
      padding: 15vh 2rem 2rem;
    }

    .pl-open-menu:where(.astro-S3CKSQXZ) {
      padding-left: 2rem;
    }
  }

  .bg-loco-purple {
    --tw-bg-opacity: 1;
    background-color: rgb(32 38 178 / var(--tw-bg-opacity));
  }

  .text-loco-red {
    --tw-text-opacity: 1;
    color: rgb(246 76 113 / var(--tw-text-opacity));
  }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script is:inline src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script is:inline>
  const swiper = new Swiper('.swiper', {
    pagination: {
      el: '.swiper-pagination',
    },

    // Navigation arrows
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },

    parallax: true,
  });
</script>

<script define:vars={{ slides }}>
  (function () {
    //SELECTOR BACKGROUND DEPENDIENTO ORIENTACION
    const bg_custom_slides = [...document.querySelectorAll('.bg_custom_slide')];

    const setBackground = () => {
      const w_height = window.innerHeight;
      const w_width = window.innerWidth;

      bg_custom_slides.map((x, index) => {
        x.style.backgroundImage = w_width > w_height ? slides[index].background : slides[index].background_movil;
      });
    };

    setBackground();
    window.addEventListener('resize', () => {
      setBackground();
    });
  })();
</script>
